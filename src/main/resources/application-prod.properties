# Production Profile Configuration

# Database Configuration
# IMPORTANT: Use environment variables for sensitive data
# Set these via: docker run -e DB_HOST=... -e DB_PORT=... -e DB_NAME=... -e DB_USER=... -e DB_PASSWORD=...
spring.datasource.url=jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:costify}
spring.datasource.username=${DB_USER:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Configuration (HikariCP)
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:20}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN_IDLE:5}
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.pool-name=CostifyHikariPool

# JPA/Hibernate Configuration
spring.jpa.show-sql=false
spring.jpa.format-sql=false
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.generate_statistics=false

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.validate-on-migrate=true
spring.flyway.clean-disabled=true
spring.flyway.out-of-order=false

# Logging Configuration
logging.level.root=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=WARN
logging.level.br.unifor.costify=INFO
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Log file configuration (optional, can be disabled if using centralized logging)
# logging.file.name=/app/logs/costify.log
# logging.file.max-size=10MB
# logging.file.max-history=30

# Server Configuration
server.port=${SERVER_PORT:8080}
server.servlet.context-path=${CONTEXT_PATH:/api}
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain,application/javascript,text/css
server.http2.enabled=true

# Error handling
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.error.include-exception=false

# Shutdown configuration
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s

# Security Configuration
# IMPORTANT: Set this to a strong secret in production
# Generate with: openssl rand -base64 32
# spring.security.oauth2.resourceserver.jwt.secret-key=${JWT_SECRET:changeme}

# Actuator Configuration (for health checks)
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# Production optimizations
spring.jpa.open-in-view=false
spring.jmx.enabled=false
