# Production Docker Compose Configuration
# This file is an example for running Costify in production

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17-alpine
    container_name: costify-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: costify
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}  # IMPORTANT: Use strong password in production
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - costify-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Uncomment to expose PostgreSQL port (not recommended for production)
    # ports:
    #   - "5432:5432"

  # Costify Application
  costify-app:
    image: costify:latest
    container_name: costify-app-prod
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      # Database Configuration
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: costify
      DB_USER: postgres
      DB_PASSWORD: ${DB_PASSWORD:-changeme}  # IMPORTANT: Use strong password in production

      # Connection Pool Settings
      DB_POOL_SIZE: 20
      DB_POOL_MIN_IDLE: 5

      # Application Configuration
      SPRING_PROFILES_ACTIVE: prod
      SERVER_PORT: 8080
      CONTEXT_PATH: /api

      # JVM Configuration
      JAVA_OPTS: >-
        -XX:+UseContainerSupport
        -XX:MaxRAMPercentage=75.0
        -XX:InitialRAMPercentage=50.0
        -XX:+UseG1GC
        -XX:+UseStringDeduplication
        -XX:+OptimizeStringConcat
        -Djava.security.egd=file:/dev/./urandom

      # Security (Optional - configure as needed)
      # JWT_SECRET: ${JWT_SECRET}

    ports:
      - "8080:8080"
    networks:
      - costify-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # Resource limits (adjust based on your needs)
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    # Uncomment to persist application logs
    # volumes:
    #   - app-logs:/app/logs

volumes:
  postgres-data:
    driver: local
  # app-logs:
  #   driver: local

networks:
  costify-network:
    driver: bridge
