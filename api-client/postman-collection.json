{
  "info": {
    "name": "Costify API",
    "description": "Complete API collection for Costify - Recipe Cost Calculation Platform",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "contentType",
      "value": "application/json",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Ingredients",
      "description": "Ingredient management endpoints",
      "item": [
        {
          "name": "Register Flour",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "{{contentType}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Flour\",\n  \"packageQuantity\": 1.0,\n  \"packagePrice\": 2.50,\n  \"packageUnit\": \"KG\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/ingredients",
              "host": ["{{baseUrl}}"],
              "path": ["ingredients"]
            },
            "description": "Register flour as a basic baking ingredient"
          },
          "response": []
        },
        {
          "name": "Register Sugar",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "{{contentType}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Sugar\",\n  \"packageQuantity\": 1.0,\n  \"packagePrice\": 1.80,\n  \"packageUnit\": \"KG\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/ingredients",
              "host": ["{{baseUrl}}"],
              "path": ["ingredients"]
            },
            "description": "Register sugar for baking recipes"
          },
          "response": []
        },
        {
          "name": "Register Milk",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "{{contentType}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Milk\",\n  \"packageQuantity\": 1.0,\n  \"packagePrice\": 3.20,\n  \"packageUnit\": \"L\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/ingredients",
              "host": ["{{baseUrl}}"],
              "path": ["ingredients"]
            },
            "description": "Register milk as liquid ingredient"
          },
          "response": []
        },
        {
          "name": "Register Eggs",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "{{contentType}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Eggs\",\n  \"packageQuantity\": 12.0,\n  \"packagePrice\": 4.50,\n  \"packageUnit\": \"UN\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/ingredients",
              "host": ["{{baseUrl}}"],
              "path": ["ingredients"]
            },
            "description": "Register eggs sold by unit (dozen)"
          },
          "response": []
        },
        {
          "name": "Register Salt",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "{{contentType}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Salt\",\n  \"packageQuantity\": 500.0,\n  \"packagePrice\": 1.25,\n  \"packageUnit\": \"G\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/ingredients",
              "host": ["{{baseUrl}}"],
              "path": ["ingredients"]
            },
            "description": "Register salt in grams"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Recipes",
      "description": "Recipe management endpoints",
      "item": [
        {
          "name": "Register Bread Recipe",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "{{contentType}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Simple Bread\",\n  \"ingredients\": [\n    {\n      \"ingredientId\": \"REPLACE-WITH-FLOUR-ID\",\n      \"quantity\": 0.5,\n      \"unit\": \"KG\"\n    },\n    {\n      \"ingredientId\": \"REPLACE-WITH-MILK-ID\",\n      \"quantity\": 200.0,\n      \"unit\": \"ML\"\n    },\n    {\n      \"ingredientId\": \"REPLACE-WITH-SALT-ID\",\n      \"quantity\": 5.0,\n      \"unit\": \"G\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/recipes",
              "host": ["{{baseUrl}}"],
              "path": ["recipes"]
            },
            "description": "Register a simple bread recipe with flour, milk, and salt"
          },
          "response": []
        },
        {
          "name": "Register Cake Recipe",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "{{contentType}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Vanilla Cake\",\n  \"ingredients\": [\n    {\n      \"ingredientId\": \"REPLACE-WITH-FLOUR-ID\",\n      \"quantity\": 0.3,\n      \"unit\": \"KG\"\n    },\n    {\n      \"ingredientId\": \"REPLACE-WITH-SUGAR-ID\",\n      \"quantity\": 0.2,\n      \"unit\": \"KG\"\n    },\n    {\n      \"ingredientId\": \"REPLACE-WITH-MILK-ID\",\n      \"quantity\": 250.0,\n      \"unit\": \"ML\"\n    },\n    {\n      \"ingredientId\": \"REPLACE-WITH-EGGS-ID\",\n      \"quantity\": 2.0,\n      \"unit\": \"UN\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/recipes",
              "host": ["{{baseUrl}}"],
              "path": ["recipes"]
            },
            "description": "Register a vanilla cake recipe with multiple ingredients"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Validation Tests",
      "description": "Test requests that should fail validation",
      "item": [
        {
          "name": "Invalid Ingredient - Missing Name",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "{{contentType}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"packageQuantity\": 1.0,\n  \"packagePrice\": 2.50,\n  \"packageUnit\": \"KG\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/ingredients",
              "host": ["{{baseUrl}}"],
              "path": ["ingredients"]
            },
            "description": "Should fail: name is required"
          },
          "response": []
        },
        {
          "name": "Invalid Ingredient - Negative Price",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "{{contentType}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Invalid Ingredient\",\n  \"packageQuantity\": 1.0,\n  \"packagePrice\": -1.0,\n  \"packageUnit\": \"KG\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/ingredients",
              "host": ["{{baseUrl}}"],
              "path": ["ingredients"]
            },
            "description": "Should fail: price must be >= 1.0"
          },
          "response": []
        },
        {
          "name": "Invalid Recipe - Empty Ingredients",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "{{contentType}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Empty Recipe\",\n  \"ingredients\": []\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/recipes",
              "host": ["{{baseUrl}}"],
              "path": ["recipes"]
            },
            "description": "Should fail: ingredients list cannot be empty"
          },
          "response": []
        },
        {
          "name": "Invalid Recipe - Invalid Unit",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "{{contentType}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Invalid Recipe\",\n  \"ingredients\": [\n    {\n      \"ingredientId\": \"550e8400-e29b-41d4-a716-446655440000\",\n      \"quantity\": 0.5,\n      \"unit\": \"INVALID_UNIT\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/recipes",
              "host": ["{{baseUrl}}"],
              "path": ["recipes"]
            },
            "description": "Should fail: unit must be valid enum value"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Pre-request script to set up common variables",
          "console.log('Executing request to:', pm.request.url.toString());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Common test script for all requests",
          "pm.test('Response time is less than 2000ms', function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(2000);",
          "});",
          "",
          "pm.test('Response has correct Content-Type', function () {",
          "    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "});"
        ]
      }
    }
  ]
}